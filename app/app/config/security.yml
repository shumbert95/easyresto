# To get started with security, check out the documentation:
# https://symfony.com/doc/current/security.html
security:

    encoders:
        FOS\UserBundle\Model\UserInterface: bcrypt

    role_hierarchy:
        ROLE_USER:        ROLE_USER
        ROLE_ADMIN:       ROLE_ADMIN
        ROLE_SUPER_ADMIN: ROLE_SUPER_ADMIN

    # https://symfony.com/doc/current/security.html#b-configuring-how-users-are-loaded
    providers:
        fos_userbundle:
          id: fos_user.user_provider.username_email


    firewalls:
        admin:
            pattern: ^/admin
            form_login:
                login_path: /admin/login
                check_path: /admin/login_check
                provider: fos_userbundle
            logout:
                path:        /admin/logout
                target:      /admin
            anonymous:    true

        public:
            methods: [GET]
            pattern: ^/(restaurants)(?!/[0-9]+/(favorites|note|ingredients))
            security: false

        login:
            pattern:  ^/login
            stateless: true
            anonymous: true
            provider: fos_userbundle
            form_login:
                check_path: /login_check
                username_parameter: _username
                password_parameter: _password
                success_handler: lexik_jwt_authentication.handler.authentication_success
                failure_handler: lexik_jwt_authentication.handler.authentication_failure
                require_previous_session: false

        main:
            pattern: ^/
            provider: fos_userbundle
            stateless: true
            anonymous: true
            lexik_jwt: ~

        # disables authentication for assets and the profiler, adapt it according to your needs
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false



    access_control:
        - { path: ^/admin/, role: ROLE_SUPER_ADMIN }
        - { path: ^/users/create, role: ROLE_SUPER_ADMIN }
        - { path: ^/users, role: ROLE_SUPER_ADMIN }
        - { path: ^/login, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/register, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/resetting, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/api/login_check, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/restaurants, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/api, role: ROLE_USER }
        - { path: ^/users/profile, role: ROLE_USER }
        - { path: ^/clients, role: ROLE_USER }
        - { path: ^/restorers, roles: [ROLE_SUPER_ADMIN] }
        - { path: ^/restaurants/create, role: ROLE_ADMIN }
        - { path: ^/restaurants/manage, role: ROLE_ADMIN }
